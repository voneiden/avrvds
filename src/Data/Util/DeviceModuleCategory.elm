-- Do not edit!
-- This file was generated by elm_type_boiler

module Data.Util.DeviceModuleCategory exposing (..)
import Data.ChipTypes exposing (DeviceModuleCategory(..))
import Json.Decode as Decode exposing (Decoder)
list : List DeviceModuleCategory
list =
    [IO
    ,INTERFACE
    ,ANALOG
    ,TIMER
    ,EVENT
    ,LOGIC
    ,TOUCH
    ,CLOCKCONTROL
    ,DEBUG
    ,OTHER
    ]


toString : DeviceModuleCategory -> String
toString deviceModuleCategory =
    case deviceModuleCategory of
        IO -> "IO"
        INTERFACE -> "INTERFACE"
        ANALOG -> "ANALOG"
        TIMER -> "TIMER"
        EVENT -> "EVENT"
        LOGIC -> "LOGIC"
        TOUCH -> "TOUCH"
        CLOCKCONTROL -> "CLOCKCONTROL"
        DEBUG -> "DEBUG"
        OTHER -> "OTHER"


fromString : String -> Maybe DeviceModuleCategory
fromString deviceModuleCategory =
    case deviceModuleCategory of
        "IO" -> Just IO
        "INTERFACE" -> Just INTERFACE
        "ANALOG" -> Just ANALOG
        "TIMER" -> Just TIMER
        "EVENT" -> Just EVENT
        "LOGIC" -> Just LOGIC
        "TOUCH" -> Just TOUCH
        "CLOCKCONTROL" -> Just CLOCKCONTROL
        "DEBUG" -> Just DEBUG
        "OTHER" -> Just OTHER
        _ -> Nothing


decode : String -> Decoder DeviceModuleCategory
decode deviceModuleCategory =
    case fromString deviceModuleCategory of
        Just deviceModuleCategory_ -> Decode.succeed deviceModuleCategory_
        Nothing -> Decode.fail <| "Unsupported deviceModuleCategory: " ++ deviceModuleCategory

